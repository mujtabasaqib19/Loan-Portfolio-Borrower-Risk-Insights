version: '3.8'

services:
  # ---------------- Zookeeper ----------------
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  # ---------------- Kafka ----------------
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper

  # ---------------- Flink ----------------
  flink-jobmanager:
    image: flink:1.17
    container_name: flink-jobmanagers
    ports:
      - "8082:8081"
    command: jobmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager

  flink-taskmanager:
    image: flink:1.17
    container_name: flink-taskmanagers
    depends_on:
      - flink-jobmanager
    command: taskmanager
    environment:
      - JOB_MANAGER_RPC_ADDRESS=flink-jobmanager

  # ---------------- PostgreSQL ----------------
  postgres:
    image: postgres:14
    container_name: postgress
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # ---------------- Apache Airflow ----------------
  airflow-webserver:
    build: .
    image: custom-airflow
    container_name: airflow-webserver
    depends_on:
      - postgres
    ports:
      - "8081:8080"
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:postgres@postgres:5432/postgres
      AIRFLOW__CORE__FERNET_KEY: ''
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__WEBSERVER__RBAC: 'True'
      AIRFLOW__WEBSERVER__SECRET_KEY: 'my_shared_secret_key'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./new_data:/opt/airflow/new_data
    command: >
      bash -c "airflow db upgrade &&
               airflow users create --username admin --password admin --firstname Mujtaba --lastname Saqib --role Admin --email admin@example.com &&
               airflow webserver"

  airflow-scheduler:
    build: .
    image: custom-airflow
    container_name: airflow-scheduler
    depends_on:
      - airflow-webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__LOAD_EXAMPLES: 'False'
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://postgres:postgres@postgres:5432/postgres
      AIRFLOW__WEBSERVER__SECRET_KEY: 'my_shared_secret_key'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./new_data:/opt/airflow/new_data
    command: bash -c "airflow scheduler"

  # ---------------- pgAdmin ----------------
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    ports:
      - "8083:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres

volumes:
  postgres_data:
  pgadmin_data:
